// Generated from d://Studia-2st//Antler//AntlerUniversityProject//Maps//Maps//GetUMPLex.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class GetUMPLex extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		POLYGON_SECTstart=1, POLYLINE_SECTstart=2, POI_SECTstart=3, SECTstart=4, 
		COMMENT=5, WS=6, EQ=7, NL=8, IntComment=9, SECTend=10, LabI=11, ID=12, 
		NUM=13, V=14;
	public static final int
		SECTION=1, VALUE=2;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE", "SECTION", "VALUE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"POLYGON_SECTstart", "POLYLINE_SECTstart", "POI_SECTstart", "SECTstart", 
			"COMMENT", "WS", "EQ", "NL", "IntComment", "SECTend", "LabI", "ID", "NUM", 
			"V"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'[POLYGON]'", "'[POLYLINE]'", "'[POI]'", null, null, null, "'='"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "POLYGON_SECTstart", "POLYLINE_SECTstart", "POI_SECTstart", "SECTstart", 
			"COMMENT", "WS", "EQ", "NL", "IntComment", "SECTend", "LabI", "ID", "NUM", 
			"V"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public GetUMPLex(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "GetUMPLex.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u000e\u00b7\u0006\uffff\uffff\u0006\uffff\uffff\u0006\uffff"+
		"\uffff\u0002\u0000\u0007\u0000\u0002\u0001\u0007\u0001\u0002\u0002\u0007"+
		"\u0002\u0002\u0003\u0007\u0003\u0002\u0004\u0007\u0004\u0002\u0005\u0007"+
		"\u0005\u0002\u0006\u0007\u0006\u0002\u0007\u0007\u0007\u0002\b\u0007\b"+
		"\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b\u0007\u000b\u0002\f\u0007"+
		"\f\u0002\r\u0007\r\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001"+
		"\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001"+
		"\u0003\u0005\u0003C\b\u0003\n\u0003\f\u0003F\t\u0003\u0001\u0003\u0001"+
		"\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0005\u0004N\b"+
		"\u0004\n\u0004\f\u0004Q\t\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001"+
		"\u0004\u0001\u0005\u0004\u0005X\b\u0005\u000b\u0005\f\u0005Y\u0001\u0005"+
		"\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007"+
		"\u0004\u0007c\b\u0007\u000b\u0007\f\u0007d\u0001\u0007\u0004\u0007h\b"+
		"\u0007\u000b\u0007\f\u0007i\u0001\u0007\u0004\u0007m\b\u0007\u000b\u0007"+
		"\f\u0007n\u0003\u0007q\b\u0007\u0001\u0007\u0001\u0007\u0001\b\u0001\b"+
		"\u0005\bw\b\b\n\b\f\bz\t\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\t\u0001"+
		"\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0003"+
		"\t\u008a\b\t\u0001\t\u0001\t\u0005\t\u008e\b\t\n\t\f\t\u0091\t\t\u0003"+
		"\t\u0093\b\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\u000b\u0004\u000b\u00a2\b\u000b"+
		"\u000b\u000b\f\u000b\u00a3\u0001\f\u0004\f\u00a7\b\f\u000b\f\f\f\u00a8"+
		"\u0001\r\u0005\r\u00ac\b\r\n\r\f\r\u00af\t\r\u0001\r\u0001\r\u0001\r\u0003"+
		"\r\u00b4\b\r\u0001\r\u0001\r\u0004DOx\u008f\u0000\u000e\u0003\u0001\u0005"+
		"\u0002\u0007\u0003\t\u0004\u000b\u0005\r\u0006\u000f\u0007\u0011\b\u0013"+
		"\t\u0015\n\u0017\u000b\u0019\f\u001b\r\u001d\u000e\u0003\u0000\u0001\u0002"+
		"\u0007\u0003\u0000\t\n\r\r  \u0002\u0000\n\n\r\r\u0001\u0000\r\r\u0001"+
		"\u0000\n\n\u0001\u000023\u0004\u0000::AZ__az\u0001\u000009\u00c5\u0000"+
		"\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000"+
		"\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b"+
		"\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0001\u000f\u0001"+
		"\u0000\u0000\u0000\u0001\u0011\u0001\u0000\u0000\u0000\u0001\u0013\u0001"+
		"\u0000\u0000\u0000\u0001\u0015\u0001\u0000\u0000\u0000\u0001\u0017\u0001"+
		"\u0000\u0000\u0000\u0001\u0019\u0001\u0000\u0000\u0000\u0001\u001b\u0001"+
		"\u0000\u0000\u0000\u0002\u001d\u0001\u0000\u0000\u0000\u0003\u001f\u0001"+
		"\u0000\u0000\u0000\u0005+\u0001\u0000\u0000\u0000\u00078\u0001\u0000\u0000"+
		"\u0000\t@\u0001\u0000\u0000\u0000\u000bK\u0001\u0000\u0000\u0000\rW\u0001"+
		"\u0000\u0000\u0000\u000f]\u0001\u0000\u0000\u0000\u0011p\u0001\u0000\u0000"+
		"\u0000\u0013t\u0001\u0000\u0000\u0000\u0015\u007f\u0001\u0000\u0000\u0000"+
		"\u0017\u0098\u0001\u0000\u0000\u0000\u0019\u00a1\u0001\u0000\u0000\u0000"+
		"\u001b\u00a6\u0001\u0000\u0000\u0000\u001d\u00ad\u0001\u0000\u0000\u0000"+
		"\u001f \u0005[\u0000\u0000 !\u0005P\u0000\u0000!\"\u0005O\u0000\u0000"+
		"\"#\u0005L\u0000\u0000#$\u0005Y\u0000\u0000$%\u0005G\u0000\u0000%&\u0005"+
		"O\u0000\u0000&\'\u0005N\u0000\u0000\'(\u0005]\u0000\u0000()\u0001\u0000"+
		"\u0000\u0000)*\u0006\u0000\u0000\u0000*\u0004\u0001\u0000\u0000\u0000"+
		"+,\u0005[\u0000\u0000,-\u0005P\u0000\u0000-.\u0005O\u0000\u0000./\u0005"+
		"L\u0000\u0000/0\u0005Y\u0000\u000001\u0005L\u0000\u000012\u0005I\u0000"+
		"\u000023\u0005N\u0000\u000034\u0005E\u0000\u000045\u0005]\u0000\u0000"+
		"56\u0001\u0000\u0000\u000067\u0006\u0001\u0000\u00007\u0006\u0001\u0000"+
		"\u0000\u000089\u0005[\u0000\u00009:\u0005P\u0000\u0000:;\u0005O\u0000"+
		"\u0000;<\u0005I\u0000\u0000<=\u0005]\u0000\u0000=>\u0001\u0000\u0000\u0000"+
		">?\u0006\u0002\u0000\u0000?\b\u0001\u0000\u0000\u0000@D\u0005[\u0000\u0000"+
		"AC\t\u0000\u0000\u0000BA\u0001\u0000\u0000\u0000CF\u0001\u0000\u0000\u0000"+
		"DE\u0001\u0000\u0000\u0000DB\u0001\u0000\u0000\u0000EG\u0001\u0000\u0000"+
		"\u0000FD\u0001\u0000\u0000\u0000GH\u0005]\u0000\u0000HI\u0001\u0000\u0000"+
		"\u0000IJ\u0006\u0003\u0000\u0000J\n\u0001\u0000\u0000\u0000KO\u0005;\u0000"+
		"\u0000LN\t\u0000\u0000\u0000ML\u0001\u0000\u0000\u0000NQ\u0001\u0000\u0000"+
		"\u0000OP\u0001\u0000\u0000\u0000OM\u0001\u0000\u0000\u0000PR\u0001\u0000"+
		"\u0000\u0000QO\u0001\u0000\u0000\u0000RS\u0005\n\u0000\u0000ST\u0001\u0000"+
		"\u0000\u0000TU\u0006\u0004\u0001\u0000U\f\u0001\u0000\u0000\u0000VX\u0007"+
		"\u0000\u0000\u0000WV\u0001\u0000\u0000\u0000XY\u0001\u0000\u0000\u0000"+
		"YW\u0001\u0000\u0000\u0000YZ\u0001\u0000\u0000\u0000Z[\u0001\u0000\u0000"+
		"\u0000[\\\u0006\u0005\u0001\u0000\\\u000e\u0001\u0000\u0000\u0000]^\u0005"+
		"=\u0000\u0000^_\u0001\u0000\u0000\u0000_`\u0006\u0006\u0002\u0000`\u0010"+
		"\u0001\u0000\u0000\u0000ac\u0007\u0001\u0000\u0000ba\u0001\u0000\u0000"+
		"\u0000cd\u0001\u0000\u0000\u0000db\u0001\u0000\u0000\u0000de\u0001\u0000"+
		"\u0000\u0000eq\u0001\u0000\u0000\u0000fh\u0007\u0002\u0000\u0000gf\u0001"+
		"\u0000\u0000\u0000hi\u0001\u0000\u0000\u0000ig\u0001\u0000\u0000\u0000"+
		"ij\u0001\u0000\u0000\u0000jq\u0001\u0000\u0000\u0000km\u0007\u0003\u0000"+
		"\u0000lk\u0001\u0000\u0000\u0000mn\u0001\u0000\u0000\u0000nl\u0001\u0000"+
		"\u0000\u0000no\u0001\u0000\u0000\u0000oq\u0001\u0000\u0000\u0000pb\u0001"+
		"\u0000\u0000\u0000pg\u0001\u0000\u0000\u0000pl\u0001\u0000\u0000\u0000"+
		"qr\u0001\u0000\u0000\u0000rs\u0006\u0007\u0001\u0000s\u0012\u0001\u0000"+
		"\u0000\u0000tx\u0005\"\u0000\u0000uw\t\u0000\u0000\u0000vu\u0001\u0000"+
		"\u0000\u0000wz\u0001\u0000\u0000\u0000xy\u0001\u0000\u0000\u0000xv\u0001"+
		"\u0000\u0000\u0000y{\u0001\u0000\u0000\u0000zx\u0001\u0000\u0000\u0000"+
		"{|\u0005\n\u0000\u0000|}\u0001\u0000\u0000\u0000}~\u0006\b\u0001\u0000"+
		"~\u0014\u0001\u0000\u0000\u0000\u007f\u0089\u0005[\u0000\u0000\u0080\u0081"+
		"\u0005E\u0000\u0000\u0081\u0082\u0005N\u0000\u0000\u0082\u008a\u0005D"+
		"\u0000\u0000\u0083\u0084\u0005E\u0000\u0000\u0084\u0085\u0005n\u0000\u0000"+
		"\u0085\u008a\u0005d\u0000\u0000\u0086\u0087\u0005e\u0000\u0000\u0087\u0088"+
		"\u0005n\u0000\u0000\u0088\u008a\u0005d\u0000\u0000\u0089\u0080\u0001\u0000"+
		"\u0000\u0000\u0089\u0083\u0001\u0000\u0000\u0000\u0089\u0086\u0001\u0000"+
		"\u0000\u0000\u008a\u0092\u0001\u0000\u0000\u0000\u008b\u008f\u0005-\u0000"+
		"\u0000\u008c\u008e\t\u0000\u0000\u0000\u008d\u008c\u0001\u0000\u0000\u0000"+
		"\u008e\u0091\u0001\u0000\u0000\u0000\u008f\u0090\u0001\u0000\u0000\u0000"+
		"\u008f\u008d\u0001\u0000\u0000\u0000\u0090\u0093\u0001\u0000\u0000\u0000"+
		"\u0091\u008f\u0001\u0000\u0000\u0000\u0092\u008b\u0001\u0000\u0000\u0000"+
		"\u0092\u0093\u0001\u0000\u0000\u0000\u0093\u0094\u0001\u0000\u0000\u0000"+
		"\u0094\u0095\u0005]\u0000\u0000\u0095\u0096\u0001\u0000\u0000\u0000\u0096"+
		"\u0097\u0006\t\u0003\u0000\u0097\u0016\u0001\u0000\u0000\u0000\u0098\u0099"+
		"\u0005L\u0000\u0000\u0099\u009a\u0005a\u0000\u0000\u009a\u009b\u0005b"+
		"\u0000\u0000\u009b\u009c\u0005e\u0000\u0000\u009c\u009d\u0005l\u0000\u0000"+
		"\u009d\u009e\u0001\u0000\u0000\u0000\u009e\u009f\u0007\u0004\u0000\u0000"+
		"\u009f\u0018\u0001\u0000\u0000\u0000\u00a0\u00a2\u0007\u0005\u0000\u0000"+
		"\u00a1\u00a0\u0001\u0000\u0000\u0000\u00a2\u00a3\u0001\u0000\u0000\u0000"+
		"\u00a3\u00a1\u0001\u0000\u0000\u0000\u00a3\u00a4\u0001\u0000\u0000\u0000"+
		"\u00a4\u001a\u0001\u0000\u0000\u0000\u00a5\u00a7\u0007\u0006\u0000\u0000"+
		"\u00a6\u00a5\u0001\u0000\u0000\u0000\u00a7\u00a8\u0001\u0000\u0000\u0000"+
		"\u00a8\u00a6\u0001\u0000\u0000\u0000\u00a8\u00a9\u0001\u0000\u0000\u0000"+
		"\u00a9\u001c\u0001\u0000\u0000\u0000\u00aa\u00ac\b\u0001\u0000\u0000\u00ab"+
		"\u00aa\u0001\u0000\u0000\u0000\u00ac\u00af\u0001\u0000\u0000\u0000\u00ad"+
		"\u00ab\u0001\u0000\u0000\u0000\u00ad\u00ae\u0001\u0000\u0000\u0000\u00ae"+
		"\u00b3\u0001\u0000\u0000\u0000\u00af\u00ad\u0001\u0000\u0000\u0000\u00b0"+
		"\u00b1\u0005\r\u0000\u0000\u00b1\u00b4\u0005\n\u0000\u0000\u00b2\u00b4"+
		"\u0007\u0001\u0000\u0000\u00b3\u00b0\u0001\u0000\u0000\u0000\u00b3\u00b2"+
		"\u0001\u0000\u0000\u0000\u00b4\u00b5\u0001\u0000\u0000\u0000\u00b5\u00b6"+
		"\u0006\r\u0003\u0000\u00b6\u001e\u0001\u0000\u0000\u0000\u0012\u0000\u0001"+
		"\u0002DOYdinpx\u0089\u008f\u0092\u00a3\u00a8\u00ad\u00b3\u0004\u0005\u0001"+
		"\u0000\u0006\u0000\u0000\u0005\u0002\u0000\u0004\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}